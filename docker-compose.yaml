version: '3'

services:
  server:
    container_name: server
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    networks:
      - monitoring  # підключаємо до спільної мережі

  prometheus:
    image: prom/prometheus:v2.35.0
    container_name: prometheus
    restart: unless-stopped
    depends_on:
      - k6
    volumes:
      - ./data/prometheus/config:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
    ports:
      - "9090:9090"
    networks:
      - monitoring

  grafana:
    image: grafana/grafana-oss:8.5.2
    container_name: grafana
    restart: unless-stopped
    depends_on:
      - prometheus
    volumes:
      - ./data/grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SERVER_DOMAIN=localhost
    ports:
      - "3000:3000"
    networks:
      - monitoring  # підключаємо до спільної мережі
  
  influxdb:
    image: influxdb:1.8
    container_name: influxdb
    restart: unless-stopped
    networks:
      - monitoring
    ports:
      - "8086:8086"  # InfluxDB port
    environment:
      INFLUXDB_DB: k6
      INFLUXDB_ADMIN_USER: admin
      INFLUXDB_ADMIN_PASSWORD: admin
      INFLUXDB_USER: k6
      INFLUXDB_PASSWORD: k6

  k6:
    image: grafana/k6:latest  # or a specific version
    container_name: k6
    depends_on:
      - server
    restart: unless-stopped
    networks:
      - monitoring
    volumes:
      - ./src/test/performance:/src/test/performance
    ports:
      - "6565:6565"  # Expose the port for Prometheus metrics
    command: run /src/test/performance/performance-test.js -o influxdb=http://influxdb:8086/k6  # Send metrics to InfluxDB

networks:
  monitoring:
    driver: bridge  # спільна мережа для контейнерів